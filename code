class Segment {
  int xPos;
  int yPos;
  Segment ( int xPos, int yPos){
   this.xPos = xPos;
   this.yPos = yPos;
  }
  public int getXPos(){
    return this.xPos;
  }
  public int getYPos(){
    return this.yPos;
  }
  public void setXPos(int xPos){
    this.xPos=xPos;
  }
  public void setYPos(int yPos){
    this.yPos = yPos;
  }
}
Segment head;
String direction = "right";
int stomach = 1;
int foodX =((int)random(50)*10);
int foodY =((int)random(50)*10);



void setup(){
  size(500,500);
  head = new Segment(0,250);
  frameRate(20);
}


void draw(){
  background(0);
  //manageTail();
  drawFood();
  drawSnake();
  move();
  collision();
}

void drawFood(){
  fill(200,30,30);
  rect(foodX,foodY,10,10);
}


void drawSnake(){
  fill(30,200,30);
  rect(head.getXPos(),head.getYPos(),10,10);
}


void move(){
  switch(direction){
    case "up":
      head.yPos = head.yPos - 10;
      break;
    case "down":
      head.yPos = head.yPos + 10;
      break;
    case "left":
      head.xPos = head.xPos - 10;
      break;
    case "right":
      head.xPos = head.xPos + 10;
      break;
  }
}

void keyPressed(){
  if (key == CODED) {
    if (keyCode == UP && direction != "down"){
      direction = "up";
    }
    else if (keyCode == DOWN && direction != "up"){
      direction = "down";
    }
    else if (keyCode == RIGHT && direction != "left"){
      direction = "right";
    }
    else if (keyCode == LEFT && direction != "right"){
      direction = "left";
    }
  }
}


void collision(){
  if (head.xPos == foodX && head.yPos == foodY){
    stomach++;
    foodX = ((int)random(50)*10);
    foodY = ((int)random(50)*10);
  }
  
}  

ArrayList <Segment> tail = new ArrayList<Segment>();

void manageTail(){
  drawTail();
  checkTailCollision();
  Segment a = new Segment(head.xPos,head.yPos);
  tail.add(a);
  if (tail.size() > stomach){
    tail.remove();
  }
  
}

void drawTail(){
  
}
void checkTailCollision(){

}
  
void gameOver(){
  
  
}
